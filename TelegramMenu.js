//Telegram bot with inline menu, based on https://blog.instalator.ru/archives/1996 by Vladimir Vilisov aka instalator

// https://www.emojicopy.com/ —ç–º–æ–¥–∑–∏

//////////// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ///////////
var options = {
    telegram:   'telegram.0',           // –ò–Ω—Å—Ç–∞–Ω—Ü–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞
    backText:   'üîô –ù–∞–∑–∞–¥',             // –ù–∞–¥–ø–∏—Å—å –Ω–∞ –∫–Ω–æ–ø–∫–µ –ù–∞–∑–∞–¥
    backCmd:    'back-',                 //–ü—Ä–µ—Ñ–∏–∫—Å –∫–æ–º–∞–Ω–¥—ã –∫–Ω–æ–ø–∫–∏ –ù–∞–∑–∞–¥
    closeText:  '‚ùå –ó–∞–∫—Ä—ã—Ç—å',           // –ù–∞–¥–ø–∏—Å—å –Ω–∞ –∫–Ω–æ–ø–∫–µ –ó–∞–∫—Ä—ã—Ç—å
    closeCmd:   'close',                //–ö–æ–º–∞–Ω–¥–∞ –∫–Ω–æ–ø–∫–∏ –ó–∞–∫—Ä—ã—Ç—å
    homeText:   'üèö –ì–ª–∞–≤–Ω–∞—è',           // –ù–∞–¥–ø–∏—Å—å –Ω–∞ –∫–Ω–æ–ø–∫–µ –î–æ–º–æ–π
    homeCmd:    'home',                  //–ö–æ–º–∞–Ω–¥–∞ –∫–Ω–æ–ø–∫–∏ –î–æ–º–æ–π
    width:      3,                      // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    users_id:   [123456789,234567891],            // id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫–æ—Ç–æ—Ä—ã–µ –∏–º–µ—é—Ç –¥–æ—Å—Ç—É–ø –∫ –º–µ–Ω—é
    menucall:   ['–º–µ–Ω—é', '/menu'],      // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ –º–µ–Ω—é
    menuPrefix: 'menu-',                // –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö –∫–æ–º–º–∞–Ω–¥ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, –º–æ–∂–Ω–æ –Ω–µ –º–µ–Ω—è—Ç—å
    showHome:   true,                   // –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É –î–æ–º–æ–π
    showMsg:    true,                   // –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤–ø–ª—ã–≤–∞—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    debug:      true                    // –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏, –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
};

/////////// –ú–ï–ù–Æ –ù–ê–ß–ê–õ–û ////////////
var menu = {
    name: '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
    icon: '‚öôÔ∏è',
    submenu: [
        { // –°—Ü–µ–Ω–∞—Ä–∏–∏
            name: '–°—Ü–µ–Ω–∞—Ä–∏–∏',
            icon: '‚öôÔ∏è',
            submenu: [
                {
                    name: '–¢–í',
                    state: 'javascript.0.Scenes.TV',
                    icons: {on: 'üì∫', off: '‚úñÔ∏è'},
                    submenu: []
                },
                {
                    name: '–ö–∏–Ω–æ',
                    state: 'javascript.0.Scenes.Moves',
                    icons: {on: 'üìΩ', off: '‚úñÔ∏è'},
                    submenu: []
                },
                {
                    name: '–°–ø–∞—Ç—å',
                    state: 'javascript.0.Scenes.Sleep',
                    icons: {on: 'üõå', off: '‚úñÔ∏è'},
                    submenu: []
                },
                {
                    name: '–£–±–æ—Ä–∫–∞',
                    state: 'javascript.0.Scenes.–°leaning',
                    icons: {on: 'ü§¶', off: '‚úñÔ∏è'},
                    submenu: []
                },
                {
                    name: '–û–ø–æ–≤–µ—â–µ–Ω–∏–µ',
                    state: 'javascript.0.Scenes.sayOff',
                    icons: {on: 'üîá', off: 'üîä'},
                    submenu: []
                },
                {
                    name: '–û—Ç–ø—É—Å–∫',
                    state: 'javascript.0.Scenes.Otpusk',
                    icons: {on: 'üìÖ', off: '‚úñÔ∏è'},
                    submenu: []
                }
                ]
        },
        { // –û—Å–≤–µ—â–µ–Ω–∏–µ
            name: '–û—Å–≤–µ—â–µ–Ω–∏–µ',
            icon: 'üí°',
            submenu: [
                {
                    name: '–ó–∞–ª',
                    icon: 'üí°',
                    submenu: [
                        {
                            name: '–û—Å–Ω–æ–≤–Ω–æ–π 1',
                            state: 'mqtt.0.myhome.lighting.GuestRoom_main',
                            icons: {on: 'üí°', off: '‚úñÔ∏è'},
                            submenu: []
                        },
                        {
                            name: '–û—Å–Ω–æ–≤–Ω–æ–π 2',
                            state: 'mqtt.0.myhome.lighting.GuestRoom_main2',
                            icons: {on: 'üí°', off: '‚úñÔ∏è'},
                            submenu: []
                        },
                        {
                            name: '–ì–ª–∞–∑–∫–∏',
                            state: 'mqtt.0.myhome.lighting.GuestRoom_sec',
                            icons: {on: 'üí°', off: '‚úñÔ∏è'},
                            submenu: []
                        }
                    ]
                },
                {
                    name: '–ö—É—Ö–Ω—è',
                    icon: 'üí°',
                    submenu: [
                        {
                            name: '–û—Å–Ω–æ–≤–Ω–æ–π',
                            state: 'mqtt.0.myhome.lighting.Kitchen_main',
                            icons: {on: 'üí°', off: '‚úñÔ∏è'},
                            submenu: []
                        },
                        {
                            name: '–ì–ª–∞–∑–∫–∏',
                            state: 'mqtt.0.myhome.lighting.Kitchen_sec',
                            icons: {on: 'üí°', off: '‚úñÔ∏è'},
                            submenu: []
                        }
                    ]
                },
                {
                    name: '–í–∞–Ω–Ω–∞—è',
                    icon: 'üõÄ',
                    submenu: [
                        {
                            name: '–û—Å–Ω–æ–≤–Ω–æ–π',
                            state: 'mqtt.0.myhome.lighting.BathRoom_main',
                            icons: {on: 'üí°', off: '‚úñÔ∏è'},
                            submenu: []
                        },
                        {
                            name: '–ó–µ—Ä–∫–∞–ª–æ',
                            state: 'mqtt.0.myhome.lighting.BathRoom_sec',
                            icons: {on: 'üí°', off: '‚úñÔ∏è'},
                            submenu: []
                        }
                    ]
                },
                {
                    name: '–ö–æ—Ä–∏–¥–æ—Ä',
                    icon: 'üí°',
                    submenu: [
                        {
                            name: '–û—Å–Ω–æ–≤–Ω–æ–π',
                            state: 'mqtt.0.myhome.lighting.Hall_main',
                            icons: {on: 'üí°', off: '‚úñÔ∏è'},
                            submenu: []
                        }
                    ]
                },
                {
                    name: '–°–ø–∞–ª—å–Ω—è',
                    icon: 'üí°',
                    submenu: [
                        {
                            name: '–û—Å–Ω–æ–≤–Ω–æ–π',
                            state: 'mqtt.0.myhome.lighting.BedRoom_main',
                            icons: {on: 'üí°', off: '‚úñÔ∏è'},
                            submenu: []
                        },
                        {
                            name: '–ì–ª–∞–∑–∫–∏',
                            state: 'mqtt.0.myhome.lighting.BedRoom_sec',
                            icons: {on: 'üí°', off: '‚úñÔ∏è'},
                            submenu: []
                        }
                    ]
                },
            ]
        },
        { // –®—Ç–æ—Ä—ã
            name: '–®—Ç–æ—Ä—ã',
            icon: '‚öôÔ∏è',
            submenu: [
                {
                    name: '–ö—É—Ö–Ω—è',
                    state: 'javascript.0.Rollet.Kitchen.Close',
                    icons: {on: 'üåö', off: 'üåû'},
                    submenu: []
                },
                {
                    name: '–°–ø–∞–ª—å–Ω—è',
                    state: 'javascript.0.Rollet.Bedroom.Close',
                    icons: {on: 'üåö', off: 'üåû'},
                    submenu: []
                }
            ]
        },
        { // –†–∞–∑–Ω–æ–µ
            name: '–†–∞–∑–Ω–æ–µ',
            icon: '‚öôÔ∏è',
            submenu: [
                {
                    name: '–ö–æ–º–ø—å—é—Ç–µ—Ä',
                    state: 'javascript.0.GetAdmin.Power',
                    icons: {on: 'üñ•Ô∏è', off: '‚úñÔ∏è'}, 
                    submenu: []
                },
                {
                    name: '–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä',
                    state: 'haier.0.power',
                    icons: {on: '‚òëÔ∏è', off: '‚úñÔ∏è'},
                    submenu: []
                },
                {
                    name: '–í–æ–¥–∞',
                    icon: 'üö∞',
                    submenu: [
                        {
                            name: '–û—Ç–∫—Ä—ã—Ç—å',
                            state: 'mqtt.0.myhome.Aquastoroj.ButtonOpen',
                            icons: {on: 'üîÑ', off: '‚è∫'},
                            submenu: []
                        },
                        {
                            name: ' ',
                            state: 'mqtt.0.myhome.Aquastoroj.open',
                            icons: {on: '–û—Ç–∫—Ä—ã—Ç–æ', off: '–ó–∞–∫—Ä—ã—Ç–æ'},
                            submenu: []
                        },
                        {
                            name: '–ó–∞–∫—Ä—ã—Ç—å',
                            state: 'mqtt.0.myhome.Aquastoroj.ButtonClose',
                            icons: {on: 'üîÑ', off: '‚è∫'},
                            submenu: []
                        }
                    ]
                }
            ]
        },
        { // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            name: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
            icon: '‚ÑπÔ∏è',
            submenu: [
                {
                    name: '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞',
                    state: Temperature,
                    icon: 'üå°',
                    submenu: []
                },
                {
                    name: '–í–ª–∞–∂–Ω–æ—Å—Ç—å',
                    state: Humidity, // –ê –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≤–æ—Ç —Ç–∞–∫
                    icon: 'üí¶',
                    submenu: []
                }
            ]
        },
    ]
};
/////////// –ú–ï–ù–Æ –ö–û–ù–ï–¶ ////////////

/////////// –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –§–£–ù–ö–¶–ò–ò –ù–ê–ß–ê–õ–û /////////////

function Environments(environmentRole) {
    var maxLength = 0;
    $('state[0_userdata.0.rooms.*.localNames](functions=localization)').each(function (id) {
        //logs(id);
        const currentLength = getState(id).val.split(',')[2].length;
        //logs(" Max = " + maxLength + " current = " + currentLength);
        maxLength = currentLength > maxLength ? currentLength : maxLength;
    });
    var text = '';
    const report = '- ';
    $('[role=value.' + environmentRole + '](functions=environment)').each(function (id) {
        //logs(id);
        const object = getObject(id, 'rooms');
        //logs('–û–ë–¨–ï–ö–¢ = ' + JSON.stringify(object))
        const room = getObject(id, 'rooms')["enumIds"][0].split('.').pop();
        //logs('–û–ë–¨–ï–ö–¢ = ' + JSON.stringify(getObject(id, 'rooms')["enumIds"][0].split('.').pop()));
        text += text ? '\r\n' : '<code>'
        text += report + ($('(rooms=' + room + ')(functions=localization)').getState().val.split(',')[2] + ':').padEnd(maxLength+1) + ' ';
        //logs('–û–ë–¨–ï–ö–¢ = ' + JSON.stringify(getState(id).val)+ JSON.stringify(object.common.unit));
        text += getState(id).val.toString().padEnd(5,'0') + ' ' + object.common.unit;
        //logs(text);
    });    
    return text + '</code>';
}

function Temperature() {
    //var text = '';
    //text += '- –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ —Å–ø–∞–ª—å–Ω–µ: ' + getState('mqtt.0.myhome.Bedroom.Temp_room').val + '';
    //text += '\r\n- –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ –∫—É—Ö–Ω–µ: ' + getState('mqtt.0.myhome.Kitchen.Temp_room').val + '';
    //return text;
    return Environments('temperature')
}

function Humidity() {
    //var text = '';
    //text += '- –í–ª–∞–∂–Ω–æ—Å—Ç—å –≤ —Å–ø–∞–ª—å–Ω–µ: ' + getState('mqtt.0.myhome.Bedroom.Humidity_room').val + '%';
    //text += '\r\n- –í–ª–∞–∂–Ω–æ—Å—Ç—å –Ω–∞ –∫—É—Ö–Ω–µ: ' + getState('mqtt.0.myhome.Kitchen.Humidity_room').val + '%';
    //return text;
    return Environments('humidity')
}

/////////// –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –§–£–ù–ö–¶–ò–ò –ö–û–ù–ï–¶ /////////////


////////////////////////////////////////////////////////////////
////////////////////////// –ú–ê–ì–ò–Ø ///////////////////////////////
////////////////////////////////////////////////////////////////
function doMenuItem(user, cmd) {
    logs('–í–´–ó–û–í –§–£–ù–ö–¶–ò–ò doMenuItem(user, cmd) –∏–∑ ' + arguments.callee.caller.name);
    logs('user = ' + JSON.stringify(user));
    logs('cmd = ' + JSON.stringify(cmd));
    var timer;
    var cmdPos = getItemPos(cmd);
    logs('cmdPos = ' + JSON.stringify(cmdPos));
    const cmdItem = getMenuItem(cmdPos.concat(menu));
    logs('cmdItem = ' + JSON.stringify(cmdItem));
    if(cmdItem.hasOwnProperty('state') && (typeof cmdItem.state !== 'function')){
        logs('–û–ë–¨–ï–ö–¢ = ' + JSON.stringify(getObject(cmdItem.state)));
        var obj = getObject(cmdItem.state);
        var role = obj.common.role;
        var type = obj.common.type;
        clearTimeout(timer);
        timer = setTimeout(function() {
            showMsg('–û—à–∏–±–∫–∞! –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞', user);
            cmdPos = cmdPos.slice(0, cmdPos.length-1);
            showMenu(user, cmdPos);
        }, 4000); 

    } else {
        return showMenu(user, cmdPos);
    }
    if(type === 'boolean'){
        setState(cmdItem.state, !getState(cmdItem.state).val, function cb(){
            clearTimeout(timer);
            cmdPos = cmdPos.slice(0, cmdPos.length-1);
            showMsg('–£—Å–ø–µ—à–Ω–æ!', user);
            showMenu(user, cmdPos);
            logs('–°–û–°–¢–û–Ø–ù–ò–ï = ' + getState(cmdItem.state).val);
        });
    } else {
        logs('–ù–ï –í–ï–†–ù–´–ô –¢–ò–ü –û–ë–¨–ï–ö–¢–ê');
        showMsg('–ù–µ –≤–µ—Ä–Ω—ã–π —Ç–∏–ø –æ–±—å–µ–∫—Ç–∞', user);
    }
}

/*** showMenu ***/
function showMenu(user, itemPos) {  
    logs('–í–´–ó–û–í –§–£–ù–ö–¶–ò–ò showMenu(user, num) –∏–∑ ' + arguments.callee.caller.name);
    logs('user = ' + JSON.stringify(user));
    logs('itemPos = ' + JSON.stringify(itemPos));    
    var menuRows = {
        menutext: (menu.icon ? menu.icon + ' ':'') + skipIndex(menu.name),
        state: '',
        backIndex: getIndex(menu.name),
        buttons: []
    };
    var subMenuPos = itemPos.concat([]);
    logs('itemPos = ' + JSON.stringify(itemPos));
    logs('subMenuPos = ' + JSON.stringify(subMenuPos));
    menuRows = getMenuRow(menu.submenu, subMenuPos, menuRows);
    logs('menuRows = ' + JSON.stringify(menuRows));
    if(itemPos.length > 0){
        menuRows.buttons = splitMenu(menuRows.buttons);
        var lastRow = [{ text: options.backText, callback_data: options.backCmd + menuRows.backIndex + '-' }];
        if (options.showHome) {
            lastRow.push({ text: options.homeText, callback_data: options.homeCmd });
        }
        lastRow.push({ text: options.closeText, callback_data: options.closeCmd });
        menuRows.buttons.push(lastRow);
        logs('menuRows.buttons = ' + JSON.stringify(menuRows.buttons));
        if(typeof menuRows.state === "function"){
            menuRows.menutext += '\r\n' + menuRows.state();
        }
        logs('menuRows 2 = ' + JSON.stringify(menuRows));
        sendTo(options.telegram, {
            user: user,
            text: menuRows.menutext,
            parse_mode: 'HTML',
            editMessageText: {
                options: {
                    chat_id: getState(options.telegram + ".communicate.requestChatId").val, 
                    message_id: getState(options.telegram + ".communicate.requestMessageId").val,
                    parse_mode: 'HTML',
                    reply_markup: {
                        inline_keyboard: menuRows.buttons,
                    }
                }
            }
        });
    } else {
        closeMenu(user);
        menuRows.buttons = splitMenu(menuRows.buttons);
        menuRows.buttons.push([{ text: options.closeText, callback_data: options.closeCmd }]);
        logs('menuRows 4 ' + JSON.stringify(menuRows));
        sendTo(options.telegram, {
            user: user,
            text: menuRows.menutext,
            parse_mode: 'HTML',            
            reply_markup: {
                inline_keyboard: menuRows.buttons,
            }
        }); 
    }
}

/*** getMenuRow ***/
function getMenuRow(subMenuRow, subMenuPos, menuRows) {  
    logs('–í–´–ó–û–í –§–£–ù–ö–¶–ò–ò getMenuRow(subMenuRow, subMenuPos, menuRows) –∏–∑ ' + arguments.callee.caller.name);
    logs('subMenuRow = ' + JSON.stringify(subMenuRow));
    logs('subMenuPos = ' + JSON.stringify(subMenuPos));
    logs('menuRows = ' + JSON.stringify(menuRows));
    var n;
    if(subMenuPos.length > 0){
        menuRows.menutext += ' > ' + (subMenuRow[subMenuPos[0]].icon ? subMenuRow[subMenuPos[0]].icon + ' ':'') + skipIndex(subMenuRow[subMenuPos[0]].name);
        n = subMenuPos.shift();
        if(typeof subMenuRow[n].state == 'function'){
            menuRows.state = subMenuRow[n].state;
        }
        if (subMenuPos.length > 0) { 
            menuRows.backIndex = getIndex(subMenuRow[n].name);
        }
        return getMenuRow(subMenuRow[n].submenu, subMenuPos, menuRows);
    } else {
        logs('subMenuRow[' + n + '] = ' + JSON.stringify(subMenuRow[n]));
        for (var i = 0; i < subMenuRow.length; i++) {
            var icon;
            if(subMenuRow[i].state && typeof subMenuRow[i].state !== 'function' && getState(subMenuRow[i].state).val){
                icon = subMenuRow[i].icons.on;
            } else if (subMenuRow[i].state && typeof subMenuRow[i].state !== 'function'){
                icon = subMenuRow[i].icons.off;
            } else {
                icon = subMenuRow[i].icon;
            }
            logs('** subMenuRow[' + i + '] = ' + JSON.stringify(subMenuRow[i]));
            menuRows.buttons.push({
                text: icon + ' ' + skipIndex(subMenuRow[i].name),
                callback_data: options.menuPrefix + subMenuRow[i].name
            });
        }
        return menuRows;
    }
}

/*** getItemPos ***/
function getItemPos(cmd) {  
    logs('–í–´–ó–û–í –§–£–ù–ö–¶–ò–ò getItemPos(cmd) –∏–∑ ' + arguments.callee.caller.name);
    logs('typeof cmd = ' + (typeof cmd));
    logs('cmd = ' + JSON.stringify(cmd));
    if (typeof cmd === 'string') {
        const cmdIndex = getIndex(cmd);
        if ( cmdIndex.length === 0) {
            return [];
        }
        else {
            return cmdIndex.split('.');
        }
    }

}

/*** getMenuItem ***/
function getMenuItem(subMenuPos) { 
    logs('–í–´–ó–û–í –§–£–ù–ö–¶–ò–ò getMenuItem(subMenuPos) –∏–∑ ' + arguments.callee.caller.name);
    logs('subMenuPos = ' + JSON.stringify(subMenuPos));
    if (subMenuPos.length > 1) {
        if (subMenuPos[subMenuPos.length - 1] !== undefined) {
            subMenuPos[subMenuPos.length - 1] = subMenuPos[subMenuPos.length - 1].submenu.length > subMenuPos[0] ? subMenuPos[subMenuPos.length - 1].submenu[subMenuPos[0]] : undefined;
        }
        subMenuPos.shift();
        return getMenuItem(subMenuPos);
    }
    else if (subMenuPos.length > 0) {
        return subMenuPos[0];
    }
    else {
        return undefined;
    }
}

/*** callback ***/
function callback(user, cmd) {  
    logs('–í–´–ó–û–í –§–£–ù–ö–¶–ò–ò callback(user, cmd) –∏–∑ ' + arguments.callee.caller.name);
    logs('user = ' + JSON.stringify(user));    
    logs('cmd = ' + cmd);
    if(options.menucall.indexOf(cmd) >= 0){
        showMenu(user, []);
    } else {
        if(cmd === options.closeCmd){
            closeMenu(user);
        } else if(cmd.indexOf(options.backCmd) === 0){
            showMenu(user, getItemPos(cmd.replace(options.backCmd,'')));
        } else if(cmd === options.homeCmd){
            showMenu(user, []);
        } else {
            doMenuItem(user, cmd.replace(options.menuPrefix,''))
        }
    }
}

/*** closeMenu ***/
function closeMenu(user) {  
    sendTo(options.telegram, {
        user: user,
        deleteMessage: {
            options: {
                chat_id: getState(options.telegram + ".communicate.requestChatId").val, 
                message_id: getState(options.telegram + ".communicate.requestMessageId").val,
            }
        }
    });
}

/*** splitMenu ***/
function splitMenu(menuArr) {    
    var i, j, resultArr = [];
    for (i = 0, j = menuArr.length; i < j; i += options.width) {
        resultArr.push(menuArr.slice(i, i + options.width));
    }
    return resultArr;
}

/*** showMsg ***/
function showMsg(text, user, showAlert) {
    if(options.showMsg){
        sendTo(options.telegram, {
            user: user,
            answerCallbackQuery: {
                text: text,
                showAlert: showAlert ? true:false
            }
        });
    }
}

/*** addMenuIndex ***/
function addMenuIndex(menuRow, indexPrefix) {
    logs('–í–´–ó–û–í –§–£–ù–ö–¶–ò–ò addMenuIndex(menuRow) –∏–∑ ' + arguments.callee.caller.name);
    logs('menuRow = ' + JSON.stringify(menuRow));    
    if (Array.isArray(menuRow)) {
        indexPrefix = indexPrefix.length > 0 ? indexPrefix + '.' : '';
        for (const key of menuRow.keys()) {
            menuRow[key].name = indexPrefix + key + '-' + menuRow[key].name;
            if (Array.isArray(menuRow[key].submenu) && menuRow[key].submenu.length) {
                menuRow[key].submenu = addMenuIndex(menuRow[key].submenu, indexPrefix + key);
            }
        }
    }
    else if ((typeof menuRow === 'object') && menuRow.hasOwnProperty('submenu')) {
        menuRow.name = '-' + menuRow.name;
        menuRow.submenu = addMenuIndex(menuRow.submenu, '');
    }
    return menuRow;
} 

/*** skipIndex ***/
function skipIndex(name) {
    logs('–í–´–ó–û–í –§–£–ù–ö–¶–ò–ò skipIndex(name) –∏–∑ ' + arguments.callee.caller.name);
    logs('name = ' + JSON.stringify(name));     
    const splitName = name.split('-',2);
    if (splitName.length === 1) {
        return splitName[0];
    }
    else {
        return splitName[1];
    }
}

/*** getIndex ***/
function getIndex(name) {
    logs('–í–´–ó–û–í –§–£–ù–ö–¶–ò–ò getIndex(name) –∏–∑ ' + arguments.callee.caller.name);
    logs('name = ' + JSON.stringify(name));
    const splitName = name.split('-',2);
    if (splitName.length === 1) {
        return '';
    }
    else {
        return splitName[0];
    }
}

/*** logs ***/
function logs(txt) {
    if(options.debug){
        log(arguments.callee.caller.name + ': ' + txt);
    }
}

/*** indexing menu ***/
menu = addMenuIndex(menu);

/*** subscribe on Telegram ***/
on({id: options.telegram + '.communicate.request', change: 'any'}, function (obj) {   
    var cmd = (obj.state.val.substring(obj.state.val.indexOf(']')+1)).toLowerCase(); 
    var userid = getState(options.telegram + ".communicate.requestChatId").val;
    if (userid){
        var name = getState(options.telegram + ".communicate.users").val;
        try {
            name = JSON.parse(name);
        } catch (err) {
            logs("–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ - " + JSON.stringify(err));
        }
        if (options.users_id.indexOf(userid) >= 0){
            logs('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - ' + name[userid].firstName + '(' + name[userid].userName +') —Å id - ' + userid + '; –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ - ' + cmd);
            callback(name[userid].userName, cmd);
        }  else {
            log('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - ' + name[userid] + '(' + name[userid].userName +') —Å id - ' + userid + ' –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö.' );
        }
    }
});

